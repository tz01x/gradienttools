{"version":3,"sources":["colorpicker.js","colorPreview.js","addNewColor.js","App.js","index.js"],"names":["ColorPicker","props","_React$useState","React","useState","background","r","g","b","a","_React$useState2","Object","slicedToArray","state","updatestate","react_default","createElement","ClickAwayListener","onClickAway","handelColorPickerPriview","className","lib","color","onChangeComplete","rgb","handelBGColor","c","concat","rgbObjTostring","ColorPreview","showbtn","setShowbtn","_React$useState3","_React$useState4","showRemoveBtn","setShowRemoveBtn","_React$useState5","_React$useState6","bgColor","setbgColor","useEffect","onMouseEnter","onMouseLeave","style","position","onClick","clolorASstirng","handelGradientColorChange","itemNo","border","borderRadius","outlineWidth","height","handelRemoveColor","AddNewColor","fontSize","cursor","textAlign","handeladdNewColor","useStyles","makeStyles","root","width","App","gradDirection","updateDirection","gradientBackgoundSize","setGradientBackgoundSize","backgrountImg","updatebgImg","_React$useState7","_React$useState8","selectedColor","setSelectedColor","_React$useState9","_React$useState10","animationPlayState","setAnimationPlayState","_React$useState11","_React$useState12","i","newcolors","index","length","console","log","push","join","boxkeyframe","keyframes","_templateObject","Box","styled","div","_templateObject2","margin","TextField","label","onChange","event","target","value","padding","map","key","whiteSpace","left","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.70cef439.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\n\r\nexport default function ColorPicker(props) {\r\n  const [state, updatestate] = React.useState({\r\n    background: {\r\n      r: 255,\r\n      g: 0,\r\n      b: 0,\r\n      a: 1\r\n    }\r\n  });\r\n  const rgbObjTostring = c => {\r\n    return `rgba( ${c.r},${c.g},${c.b},${c.a})`;\r\n    // rgba(255, 0, 0, 0.62);\r\n  };\r\n  const handleChangeComplete = color => {\r\n    updatestate({ background: color.rgb });\r\n    props.handelBGColor(rgbObjTostring(color.rgb));\r\n    // console.log(color.hex);\r\n  };\r\n  const handleClickAway = () => {\r\n    props.handelColorPickerPriview();\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <div className=\"colorPicker\">\r\n        <SketchPicker\r\n          color={state.background}\r\n          onChangeComplete={handleChangeComplete}\r\n        />\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport ColorPicker from \"./colorpicker\";\r\n\r\nexport default function ColorPreview(props) {\r\n  const [showbtn, setShowbtn] = React.useState(false);\r\n  const [showRemoveBtn, setShowRemoveBtn] = React.useState(false);\r\n  let [bgColor, setbgColor] = React.useState({\r\n    background: props.color ? props.color : \"red\"\r\n  });\r\n  React.useEffect(() => {\r\n    setbgColor({\r\n      background: props.color ? props.color : \"red\"\r\n    });\r\n  }, [props.color]);\r\n  const handelBGColor = clolorASstirng => {\r\n    setbgColor({ background: clolorASstirng });\r\n    props.handelGradientColorChange(props.itemNo, clolorASstirng);\r\n    // console.log(clolorASstirng);\r\n  };\r\n  const handelColorPickerPriview = () => {\r\n    setShowbtn(false);\r\n  };\r\n  // note need capculate this smaller compunet\r\n  return (\r\n    <div\r\n      onMouseEnter={() => {\r\n        setShowRemoveBtn(true);\r\n      }}\r\n      onMouseLeave={() => {\r\n        setShowRemoveBtn(false);\r\n      }}\r\n      style={{ position: \"relative\" }}\r\n    >\r\n      <div\r\n        className=\"colorPriview\"\r\n        style={bgColor}\r\n        onClick={() => setShowbtn(true)}\r\n      >\r\n        {showbtn ? (\r\n          <ColorPicker\r\n            handelBGColor={handelBGColor}\r\n            handelColorPickerPriview={handelColorPickerPriview}\r\n          />\r\n        ) : null}\r\n      </div>\r\n      {showRemoveBtn ? (\r\n        <div className=\"color-remove\">\r\n          <button\r\n            style={{\r\n              color: \"red\",\r\n              // background:\"red\",\r\n              border: \"0\",\r\n              borderRadius: \"10px\",\r\n              outlineWidth: \"0px\",\r\n              height: \"25px\"\r\n            }}\r\n            onClick={() => {\r\n              props.handelRemoveColor(props.itemNo);\r\n            }}\r\n          >\r\n            r\r\n          </button>\r\n          <div />{\" \"}\r\n          <button\r\n            style={{\r\n              // background:\"red\",\r\n              border: \"0\",\r\n              borderRadius: \"10px\",\r\n              outlineWidth: \"0px\",\r\n              height: \"25px\"\r\n            }}\r\n            onClick={() => {\r\n              setShowRemoveBtn(false);\r\n            }}\r\n          >\r\n            c\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AddNewColor(props) {\r\n  return (\r\n    <div\r\n      className=\"colorPriview\"\r\n      style={{\r\n        background: \"white\",\r\n        fontSize: \"20px\",\r\n        cursor: \"pointer\",\r\n        textAlign: \"center\"\r\n      }}\r\n      onClick={props.handeladdNewColor}\r\n    >\r\n      +\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport ColorPreview from \"./colorPreview\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\n// import form src\r\nimport AddNewColor from \"./addNewColor\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 200\r\n  }\r\n});\r\n\r\nexport default function App() {\r\n  const classes = useStyles();\r\n\r\n  //initial value\r\n  const [gradDirection, updateDirection] = React.useState(\"to right\");\r\n  const [gradientBackgoundSize, setGradientBackgoundSize] = React.useState(\r\n    \"400% 100%\"\r\n  );\r\n  const [backgrountImg, updatebgImg] = React.useState(\r\n    `linear-gradient(${gradDirection}, blue ,pink)`\r\n  );\r\n  const [selectedColor, setSelectedColor] = React.useState([\"blue\", \"pink\"]); //initial colors\r\n  const [animationPlayState, setAnimationPlayState] = React.useState(\"running\");\r\n  const [value, setValue] = React.useState(30);\r\n\r\n  const handelSliderValueChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handelGradientBackgroundSizeChange = event => {\r\n    setGradientBackgoundSize(event.target.value);\r\n  };\r\n\r\n  const hendeldirectionChnage = event => {\r\n    updateDirection(event.target.value);\r\n    // updatebgImg(`linear-gradient(${event.target.value} , ${selectedColor})`);\r\n  };\r\n  const handelGradientColorChange = (i, color) => {\r\n    // gradDirection\r\n    const newcolors = [...selectedColor];\r\n\r\n    for (let index = 0; index < selectedColor.length; index++) {\r\n      if (i === index) {\r\n        newcolors[i] = color;\r\n      }\r\n    }\r\n    setSelectedColor([...newcolors]);\r\n\r\n    // let text = `linear-gradient(${gradDirection},${selectedColor.join(\",\")})`;\r\n    // updatebgImg(text);\r\n    // console.log(text);\r\n  };\r\n\r\n  const handeladdNewColor = () => {\r\n    setSelectedColor([...selectedColor, \"red\"]);\r\n  };\r\n  const handelRemoveColor = i => {\r\n    console.log(i);\r\n\r\n    const newcolors = [];\r\n    for (let index = 0; index < selectedColor.length; index++) {\r\n      if (i !== index) {\r\n        newcolors.push(selectedColor[index]);\r\n      }\r\n    }\r\n    console.log(newcolors);\r\n\r\n    setSelectedColor([...newcolors]);\r\n    console.log(selectedColor);\r\n  };\r\n\r\n  const handelRemoveAllColor = () => {\r\n    setSelectedColor([]);\r\n  };\r\n  const handelAnimationPlayStateChange = () => {\r\n    if (animationPlayState === \"running\") {\r\n      setAnimationPlayState(\"paused\");\r\n    } else {\r\n      setAnimationPlayState(\"running\");\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    updatebgImg(\r\n      `linear-gradient(${gradDirection}, ${selectedColor.join(\",\")})`\r\n    );\r\n  }, [gradDirection, selectedColor]);\r\n\r\n  const boxkeyframe = keyframes`\r\n  \r\n    0%{\r\n      background-position: 0%;\r\n    }\r\n    100%{\r\n      background-position: 100%;\r\n    }\r\n  \r\n`;\r\n\r\n  const Box = styled.div`\r\n    height: 20vh;\r\n    background-image: ${backgrountImg};\r\n    background-size: ${gradientBackgoundSize};\r\n    margin: auto;\r\n    width: 60%;\r\n    animation: ${boxkeyframe} 2s infinite alternate;\r\n    animation-play-state: ${animationPlayState};\r\n  `;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 style={{ textAlign: \"center\" , margin:\"2em 0\" }}>Gradiendt Tool </h1>\r\n\r\n      {/* <div className=\"\"  style={pStyle}>this is box</div> */}\r\n      <Box />\r\n\r\n      <div className=\"testfields\">\r\n        <TextField\r\n          label=\"Gradient direction\"\r\n          onChange={hendeldirectionChnage}\r\n          value={gradDirection}\r\n        />\r\n        <br />\r\n\r\n        <TextField\r\n          label=\"Backgorund-size\"\r\n          onChange={handelGradientBackgroundSizeChange}\r\n          value={gradientBackgoundSize}\r\n        />\r\n      </div>\r\n      <div className=\"container\">\r\n        Amimation playstate :\r\n        <span>  </span>\r\n        <button onClick={handelAnimationPlayStateChange} style={{padding:\"2px\"}}>\r\n          {animationPlayState}\r\n        </button>\r\n      </div>\r\n      <br />\r\n      <h5 className=\"container\" style={{ textAlign: \"left\" }}>\r\n        Gradient Colors\r\n      </h5>\r\n      <div className=\"color-viewer\">\r\n        {selectedColor.map((value, index) => {\r\n          return (\r\n            <div className=\"color-viewer-item\" key={index}>\r\n              <ColorPreview\r\n                color={value} //initial color\r\n                itemNo={index}\r\n                handelRemoveColor={handelRemoveColor}\r\n                handelGradientColorChange={handelGradientColorChange}\r\n              />\r\n\r\n              {/* key dont actualy set a value so you cant find in props.key */}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <div className=\"color-viewer-item\">\r\n          <AddNewColor handeladdNewColor={handeladdNewColor} />\r\n        </div>\r\n        <button onClick={handelRemoveAllColor}>remove all</button>\r\n      </div>\r\n      <h4 className=\"container\">Preview:</h4>\r\n      <pre className=\"gradientCSS\" style={{ textAlign: \"left\" }}>\r\n       \r\n\r\n        {'{'}\r\n        <br />\r\n        <div><span style={{ color: \"#009FFF\" }}> height</span>: <samp>10vh</samp>;</div>\r\n\r\n        <div><span style={{ color: \"#009FFF\" }}> background-image </span>: <span style={{whiteSpace:'pre-line'}}>{backgrountImg}</span> ;</div>\r\n        <div><span style={{ color: \"#009FFF\" }}> background-size </span>: <span >{gradientBackgoundSize}</span> ;</div>\r\n        <div><span style={{ color: \"#009FFF\" }}> animation </span>: gradientAnimation 2s infinite alternate</div>\r\n    \r\n        {'}'}\r\n        {\"\\n\"}\r\n \r\n\r\n      <div><span style={{ color: \"pink\" }} >@keyframes</span> gradientAnimation {\"{\"}</div>\r\n      <div style={{position:\"relative\",left:\"10px\"}}>\r\n      <div>0%{\"{\"}</div>\r\n      <div><span style={{ color: \"#009FFF\" }}> background-position</span> : 0%;</div>\r\n      <div>{'}'}</div>\r\n      <div>100%{\"{\"}</div>\r\n      <div><span style={{ color: \"#009FFF\" }}> background-position</span> : 100%;</div>\r\n      <div>{'}'}</div>\r\n      </div>\r\n      <div>{'}'}</div>\r\n\r\n\r\n      </pre>\r\n\r\n      {/* <div className={classes.root}>\r\n        <Typography id=\"continuous-slider\" gutterBottom>\r\n          \r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item />\r\n          <Grid item xs>\r\n            <Slider\r\n              value={value}\r\n              onChange={handelSliderValueChange}\r\n              aria-labelledby=\"continuous-slider\"\r\n              max={500}\r\n            />\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <div>value is {value} px</div>\r\n        <div />\r\n      </div> */}\r\n      {/* <Bar onClick={()=>alert(\"whats upp\")}  className=\"\">I pulse</Bar> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}